<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.muenchen.oss.oai</groupId>
        <artifactId>oai-pmh-spring-boot-starter-parent</artifactId>
        <version>2.1.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>oai-pmh-schema</artifactId>
    <version>2.1.0</version>
    <name>oai-pmh-spring-boot-starter :: oaipmhschema</name>
    <url>https://github.com/it-at-m/oai-pmh-spring-boot-starter</url>
    <description>OAI-PMH java classes for the Schema</description>

    <properties>
        <java.version>21</java.version>
        <sonar.exclusions>**/oai-pmh-schema/**/*</sonar.exclusions>
    </properties>


    <dependencies>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/java</sourceDirectory>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                    <release>${java.version}</release>
                </configuration>
            </plugin>

            <!--
            Maven Surefire plugin executes unit tests during the test phase of the Maven build lifecycle.
            Importantly, the Surefire plugin is called implicitly by the Maven life cycle whenever the test
            goal is executed — for example, when running ‘mvn test‘ or ‘mvn install‘
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <!--suppress UnresolvedMavenProperty -->
                    <argLine>${surefireArgLine} -Dfile.encoding=${project.build.sourceEncoding}</argLine>
                </configuration>
            </plugin>


        </plugins>
    </build>

    <scm>
        <url>https://github.com/it-at-m/oai-pmh-spring-boot-starter</url>
        <connection>scm:git:https://github.com/it-at-m/oai-pmh-spring-boot-starter.git</connection>
        <developerConnection>scm:git:https://github.com/it-at-m/oai-pmh-spring-boot-starter.git</developerConnection>
        <tag>2.1.0</tag>
  </scm>
</project>
